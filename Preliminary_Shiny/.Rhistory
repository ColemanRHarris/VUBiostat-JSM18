pgeom(q = 5,prob = tp)
1-pgeom(q = 5,prob = tp)
1-pgeom(q = 4,prob = tp)
1-pgeom(q = 1,prob = tp)
1-pgeom(q = 2,prob = tp)
1-pgeom(q = 3,prob = tp)
log(3/4)/log(4/3)
log(3/2)/log(4/3) + 1
log(3/4)/log(4/3) + 1
1/32 - 1
(1/32 - 1) * log(4/3)
e ^ ((1/32 - 1) * log(4/3))
e ^ ((1/32 - 1) * log(4/3)) / 1.5
dgeom(1:5,.5)
sum(dgeom(1:5,.5))
pgeom(6,.5)
pgeom(5,.5)
qnorm(.01)
qnorm(.99)
sqrt(2*3)
sqrt(2)*sqrt(3)
a <- .02/4.66
a/(sqrt(.49)*sqrt(.51))
1/.0086
116.28^2
b <- a/(sqrt(.49)*sqrt(.51))
1/b
(1/b)^2
ceiling((1/b)^2)
n <- 13567
.49*n + 2.33*sqrt(n*.49*.51)
qnorm(1.96)
1+pnorm(1.96)
pnorm(1.96)
?pnorm
c <- 1.96
1+pnorm(-c)-pnorm(c)
n <- 100
1+pnorm(-c-sqrt(n))-pnorm(c-sqrt(n))
cs <- seq(0,2,.001)
cs <- seq(0,2,.001)
for(i in 1:length(cs)){
if(abs(get.a(cs[i])-0.05) < 0.001){print(i);break}
}
get.a <- function(c){
1+pnorm(-c)-pnorm(c)
}
for(i in 1:length(cs)){
if(abs(get.a(cs[i])-0.05) < 0.001){print(i);break}
}
cs <- seq(0,2,.001)
for(i in 1:length(cs)){
if(abs(get.a(cs[i])-0.05) < 0.001){print(cs[i]);break}
}
cs <- seq(0,2,.001)
for(i in 1:length(cs)){
if(abs(get.a(cs[i])-0.05) < 0.000001){print(cs[i])}
}
cs <- seq(0,2,.001)
for(i in 1:length(cs)){
if(abs(get.a(cs[i])-0.05) < 0.00001){print(cs[i])}
}
n <- 1
repeat{
if(abs(get.b(n,cs[i])-0.25) < 0.001){print(n);break}
}
get.b <- function(n,c){
1+pnorm(-c-sqrt(n))-pnorm(c-sqrt(n))
}
n <- 1
repeat{
if(abs(get.b(n,cs[i])-0.25) < 0.001){print(n);break}
}
n <- 1
repeat{
if(abs(get.b(n,cs[i])-0.25) < 0.001){print(n);break}
n <- n + 1
}
get.b(n,cs[i])
get.b(10,1.96)
n <- 1
repeat{
if(abs(1-get.b(n,cs[i])-0.25) < 0.001){print(n);break}
n <- n + 1
}
get.b(1,1.96)
get.b(2,1.96)
get.b(3,1.96)
get.b(4,1.96)
get.b(5,1.96)
get.b(6,1.96)
get.b(7,1.96)
get.b(8,1.96)
pp <- 1/2
pbinom(q = 0,size=10,prob = pp)
pbinom(q = 1,size=10,prob = pp)
pbinom(q = 2,size=10,prob = pp)
pbinom(q = 2,size=10,prob = pp)
pp <- 1/4
pbinom(q = 2,size=10,prob = pp)
1-pbinom(5,10,.5)
get.b <- function(p){
1-pbinom(5,10,p)
}
ps <- seq(0.51,1,0.01)
bs <- rep(NA,length(ps))
for(i in 1:length(ps)){
bs[i] <- get.n(ps[i])
}
plot(ps,bs)
get.b <- function(p){
1-pbinom(q = 5,size = 10,prob = p)
}
ps <- seq(0.51,1,0.01)
bs <- rep(NA,length(ps))
for(i in 1:length(ps)){
bs[i] <- get.b(ps[i])
}
plot(ps,bs)
get.b <- function(p){
1-pbinom(q = 5,size = 10,prob = p)
}
ps <- seq(0.501,1,0.001)
bs <- rep(NA,length(ps))
for(i in 1:length(ps)){
bs[i] <- get.b(ps[i])
}
plot(ps,bs)
plot(ps,bs,type="l")
plot(ps,bs,type="l",col="coral")
plot(ps,bs,type="l",col="coral",xlab="Value of p under H1",ylab="Power")
plot(ps,bs,type="l",col="coral",xlab="Value of p under H1",ylab="Power",main="Graph for C&B #8.22(b)")
a <- 1-pbinom(5,10,.5)
ound(a,4)
round(a,4)
phi1 <- function(t){
if(t <= -0.05){
return(0)
} else if(t > -0.05 & t <= 0.95){
return(t+0.5)
} else if(t > 0.95){
return(1)
}
}
phi2 <- function(t,c){
if(t <= (c/2)-1){
return(0)
} else if(t > (c/2)-1 & t <= (c-1)/2){
return(((2*t + 2 - c)^2) / 2)
} else if(t > (c-1)/2 & t <= c/2){
return((1 - (c-2*t)^2)/2)
} else if(t > c/2){
return(1)
}
}
phi1(.5)
phi2(.5,1.68)
t <- seq(0,2,0.01)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2 <- phi2(t[i],c)
}
plot(t,p1)
plot(t,p1,type="l")
lines(t,p2,col="red")
lines(p2,col="red")
t <- seq(0,1,0.01)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2 <- phi2(t[i],c)
}
t <- seq(0,1,0.01)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2[i] <- phi2(t[i],c)
}
plot(t,p1,type="l")
lines(t,p2,col="red")
plot(t,p2,type="l")
lines(t,p1,col="red")
plot(t,p2,type="l",xlim = c(0,1.2))
lines(t,p1,col="red")
plot(t,p1,type="l",xlim = c(0,1.2))
phi1 <- function(t){
if(t <= -0.05){
return(0)
} else if(t > -0.05 & t <= 0.95){
return(t+0.05)
} else if(t > 0.95){
return(1)
}
}
phi2 <- function(t,c){
if(t <= (c/2)-1){
return(0)
} else if(t > (c/2)-1 & t <= (c-1)/2){
return(((2*t + 2 - c)^2) / 2)
} else if(t > (c-1)/2 & t <= c/2){
return((1 - (c-2*t)^2)/2)
} else if(t > c/2){
return(1)
}
}
t <- seq(0,1,0.01)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2[i] <- phi2(t[i],c)
}
plot(t,p1,type="l",xlim = c(0,1.2))
lines(t,p1,col="red")
phi1 <- function(t){
if(t <= -0.05){
return(0)
} else if(t > -0.05 & t <= 0.95){
return(t+0.05)
} else if(t > 0.95){
return(1)
}
}
phi2 <- function(t,c){
if(t <= (c/2)-1){
return(0)
} else if(t > (c/2)-1 & t <= (c-1)/2){
return(((2*t + 2 - c)^2) / 2)
} else if(t > (c-1)/2 & t <= c/2){
return((1 - (c-2*t)^2)/2)
} else if(t > c/2){
return(1)
}
}
t <- seq(0,1,0.01)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2[i] <- phi2(t[i],c)
}
plot(t,p1,type="l",xlim = c(0,1.2))
lines(t,p2,col="red")
t <- seq(0,1,0.001)
c <- 1.68
p1 <- p2 <- rep(NA, length(t))
for(i in 1:length(t)){
p1[i] <- phi1(t[i]); p2[i] <- phi2(t[i],c)
}
plot(t,p1,type="l",xlim = c(0,1.2),)
lines(t,p2,col="red")
plot(t,p1,type="l",xlim = c(0,1.2),xlab="Theta",ylab="Power",main="C&B #8.13(b)")
plot(t,p1,type="l",xlim = c(0,1.2),xlab="Theta",ylab="Power",main="C&B #8.13(b)",col="dodgerblue")
lines(t,p2,col="coral")
legend(0,.9,c("Phi 1","Phi 2"))
legend(0,.9,c("Phi 1","Phi 2"),col=c("dodgerblue","coral,"))
legend(0,.9,c("Phi 1","Phi 2"),fill=c("dodgerblue","coral,"))
legend(0,.9,c("Phi 1","Phi 2"),fill=c("dodgerblue","coral"))
library(rvest)
w <- read_html("http://www.memphis.edu/accountancy/faculty/index.php")
html_attr(w,"div")
View(w)
html_nodes(w,"div")
html_attr(html_nodes(w,"div"), "row-fluid")
html_attr(html_nodes(w,"div"), "class")
at[which(at=="row-fluid")]
at <- html_attr(html_nodes(w,"div"), "class")
at[which(at=="row-fluid")]
html_nodes(w,"div")[which(at=="row-fluid")]
html_text(html_nodes(w,"div")[which(at=="row-fluid")])
html_text(html_nodes(w,"div")[which(at=="row-fluid")])[1]
trimws(html_text(html_nodes(w,"div")[which(at=="row-fluid")]))
trimws(html_text(html_nodes(w,"div")[which(at=="row-fluid")]))[1]
trimws(html_text(html_nodes(w,"div")[which(at=="row-fluid")])[1])
at <- html_attr(html_nodes(w,"div"), "class")
html_text(html_nodes(w,"div")[which(at=="row-fluid")])
html_text(html_nodes(w,"div")[which(at==c)])
c="row-fluid"
w <- read_html("http://www.memphis.edu/accountancy/faculty/index.php")
html_text(html_nodes(w,"div")[which(at==c)])
words <- html_text(html_nodes(w,"div")[which(at==c)])
words[1]
trimws(words[1])
html_attr(html_nodes(w,"div")[which(at==c)],"a")
emails <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
html_nodes(html_nodes(w,"div")[which(at==c)],"a")
e <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
grepl("mailto",e)
e[grepl("mailto",e)]
grepRaw(":",e[i])
i <- 1
grepRaw(":",e[i])
substr(e[i],grepRaw(":",e[i]),grepRaw("?",e[i]))
e[i]
e <- e[grepl("mailto",e)]
substr(e[i],grepRaw(":",e[i]),grepRaw("?",e[i]))
grepRaw(":",e[i])
grepRaw("?",e[i])
e
e[i]
substr(e[i],grepRaw(":",e[i]),grepRaw("\?",e[i]))
substr(e[i],grepRaw(":",e[i]),grepRaw('?',e[i]))
grepRaw('?',e[i])
grepRaw('\\?',e[i])
substr(e[i],grepRaw(":",e[i]),grepRaw('\\?',e[i]))
substr(e[i],grepRaw(":",e[i])+1,grepRaw('\\?',e[i])-1)
words[i]
tw <- trimws(words[i])
tw
grepRaw("\\n",tw)
gsub("[\r\n]", "", tw)
trimws(gsub("[\r\n]", "", tw))
trimws(gsub("[\r\n]", "", tw))
trimws(gsub("[\r\n]", "", tw))[1]
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw
gregexpr(" ",tw)
gsub(pattern = " ",replacement = "+",x = tw)
tw.p <- gsub(pattern = " ",replacement = "+",x = tw)
gsub("++","",tw.p)
gsub("+","",tw.p)
gsub("\\+","",tw.p)
w <- read_html("http://www.memphis.edu/accountancy/faculty/index.php")
library(rvest)
w <- read_html("http://www.memphis.edu/accountancy/faculty/index.php")
c="row-fluid"
at <- html_attr(html_nodes(w,"div"), "class")
words <- html_text(html_nodes(w,"div")[which(at==c)])
e <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
e <- e[grepl("mailto",e)]
for(i in 1:length(e)){
e[i] <- substr(e[i],grepRaw(":",e[i])+1,grepRaw('\\?',e[i])-1)
}
i <- 1
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw
gsub("  ","",tw)
("  ","",tw)
tw.p <- gsub("  ","",tw)
gregexpr(" ",tw.p)
gregexpr("[1:9]",tw.p)
unlist(gregexpr("[1:9]",tw.p))
substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1])
n <- substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
unlist(gregexpr("Email",tw.p))
tw.p
ubstr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
at <- html_attr(html_nodes(w,"div"), "class")
words <- html_text(html_nodes(w,"div")[which(at==c)])
e <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
e <- e[grepl("mailto",e)]
for(i in 1:length(e)){
e[i] <- substr(e[i],grepRaw(":",e[i])+1,grepRaw('\\?',e[i])-1)
}
t <- n <- rep(NA,length(e))
for(i in 1:length(words)){
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
n[i] <- substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
t[i] <- substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))s
}
cbind(n,t,e)
t <- n <- rep(NA,length(e))
length(words)
trimws(gsub("[\r\n]", "", words[i]))
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
for(i in 1:length(words)){
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
n[i] <- substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
t[i] <- substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
}
n
t
words[17]
i <- 17
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
tw.p
n[17] <- "David Spiceland"
n
cbind(n,t,e)
cbind(get.div.names(w,c="row-fluid"), "School of Accountancy")
get.div.names <- function(w,c){
at <- html_attr(html_nodes(w,"div"), "class")
words <- html_text(html_nodes(w,"div")[which(at==c)])
e <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
e <- e[grepl("mailto",e)]
for(i in 1:length(e)){
e[i] <- substr(e[i],grepRaw(":",e[i])+1,grepRaw('\\?',e[i])-1)
}
t <- n <- rep(NA,length(e))
for(i in 1:length(words)){
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
n[i] <- substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
t[i] <- substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
}
n[17] <- "David Spiceland"
cbind(n,t,e)
}
w <- read_html("http://www.memphis.edu/accountancy/faculty/index.php")
cbind(get.div.names(w,c="row-fluid"), "School of Accountancy")
a <- cbind(get.div.names(w,c="row-fluid"), "School of Accountancy")
View(a)
cbind(get.div.names(w,c="row-fluid"), "School of Accountancy")
get.div.names(w,c="row-fluid")
a <- get.div.names(w,c="row-fluid")
View(a)
get.div.names <- function(w,c){
at <- html_attr(html_nodes(w,"div"), "class")
words <- html_text(html_nodes(w,"div")[which(at==c)])
e <- html_nodes(html_nodes(w,"div")[which(at==c)],"a")
e <- e[grepl("mailto",e)]
for(i in 1:length(e)){
e[i] <- substr(e[i],grepRaw(":",e[i])+1,grepRaw('\\?',e[i])-1)
}
t <- n <- rep(NA,length(e))
for(i in 1:length(words)){
tw <- trimws(gsub("[\r\n]", "", words[i]))
tw.p <- gsub("  ","",tw)
n[i] <- substr(tw.p,1,unlist(gregexpr("[1:9]",tw.p))[1]-1)
t[i] <- substr(tw.p,unlist(gregexpr("Email",tw.p))+5,nchar(tw.p))
}
n[17] <- "David Spiceland"
data.frame(cbind(n,t,e))
}
a <- get.div.names(w,c="row-fluid")
a <- cbind(get.div.names(w,c="row-fluid"), "School of Accountancy")
View(a)
a <- cbind(get.div.names(w,c="row-fluid"), dept)
dept <- "School of Accountancy"
a <- cbind(get.div.names(w,c="row-fluid"), dept)
View(a)
shiny::runApp('Desktop/R Files/Data Expo 2018/VUBiostat-JSM18/Preliminary_Shiny')
install.packages("shinydashboard")
runApp('Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
setwd("~/Desktop/R Files/Data Expo 2018/VUBiostat-JSM18/Preliminary_Shiny")
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp('~/Desktop/R Files/Data Expo 2018/reclean_march18/dashboard_ex.R')
runApp()
runApp()
runApp()
runApp()
locations <- read_csv("data/locations_with_index.csv")
fore <- readRDS("data/forecast1.rds")
hist <- read_csv("data/historical1.csv")
qpal <- colorQuantile("Reds", locations$index, n = 3)
hist(locations$index)
hist(locations$index,breaks=30)
hist(locations$index,breaks=20)
hist(locations$index,breaks=20,col="yellow")
hist(locations$index,breaks=20,col="gold")
min(locations$index)
hist(locations$index,breaks=20,col="gold",xlim=c(5.7,6.3))
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.2))
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.25))
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.21))
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.21),density=T)
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.21),freq=F)
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.21),freq=F,ylab="Number of Cities",xlab="Happiness Index")
hist(locations$index,breaks=20,col="gold",xlim=c(5.8,6.21),freq=F,ylab="Number of Cities",xlab="Happiness Index",main="Distribution of Cities' Happiness Index")
lines(c(6.1,6.1))
lines(c(6.1,6.1),100)
lines(c(6.1,6.1),c(0:10))
lines(c(6.1:6.1),c(0:10))
abline(v=6.0,col="green")
abline(v=6.0,col="green",lwd=2)
abline(v=6.0,col="darkslategray",lwd=2)
abline(v=6.0,col="darkslategray",lwd=5)
runApp()
runApp()
abline(v=6.0,col="firebrick",lwd=5)
text(x = 6.0,y = 6,"Amarillo")
text(x = 6.0+.05,y = 6,"Amarillo")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
subset(hist(hist$AirPtCd == "KBHB"))
subset(hist,hist$AirPtCd == "KBHB")
s <- subset(hist,hist$AirPtCd == "KBHB")
hist(s$Max_TemperatureF)
hist(s$Max_TemperatureF,breaks=20)
View(locations)
runApp()
hist(locations$index,breaks=20,col="bisque",xlim=c(5.8,6.21),freq=F,ylab="Number of Cities",xlab="Happiness Index",main="Distribution of Cities' Happiness Index")
abline(v=locations[which(locations$city == input$city),]$index,col="firebrick",lwd=5)
text(x = locations[which(locations$city == input$city),]$index,y = 6,input$city,pos=4,col = "firebrick",cex=1.5)
runApp()
runApp()
runApp()
hist(locations$index,breaks=20,col="aliceblue",xlim=c(5.8,6.21),freq=F,ylab="Number of Cities",xlab="Happiness Index",main="Distribution of Cities' Happiness Index")
hist(locations$index,breaks=20,col="lightgoldenrodyellow",xlim=c(5.8,6.21),freq=F,ylab="Number of Cities",xlab="Happiness Index",main="Distribution of Cities' Happiness Index")
runApp()
runApp()
runApp()
runApp()
runApp()
